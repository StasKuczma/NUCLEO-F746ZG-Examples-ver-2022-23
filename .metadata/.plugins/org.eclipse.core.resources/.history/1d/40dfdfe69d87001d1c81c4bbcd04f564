#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include "CuTest.h"
#include "arm_math.h"

#define len(x) (sizeof(x)/sizeof(x[0]))

void TestCmsisDsp_RMSE(CuTest *tc)
{
  const float32_t a[] = { 0.8150f, 0.9060f, 0.1270f };
  const float32_t b[] = { 0.9130f, 0.6320f, 0.0980f };
  float32_t a_minus_b[len(a)];
  float32_t c;
  const float32_t c_ref = 0.1688402f;

  /* CMSIS DSP implementation of root mean square error */
  arm_sub_f32(a, b, a_minus_b, len(a_minus_b));
  arm_rms_f32(a_minus_b, len(a_minus_b), &c);

  CuAssertDblEquals(tc, c, c_ref, 1e-10f);
}

CuSuite* CuGetCmsisDspSuite(void)
{
	CuSuite* suite = CuSuiteNew();

	SUITE_ADD_TEST(suite, TestCmsisDsp_RMSE);

	return suite;
}
